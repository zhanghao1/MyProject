jQuery.extend({
    createUploadIframe: function (b, d) {
        var a = "jUploadFrame" + b;
        var c = '<iframe id="' + a + '" name="' + a + '" style="position:absolute; top:-9999px; left:-9999px"';
        if (window.ActiveXObject) {
            if (typeof d == "boolean") {
                c += ' src="javascript:false"'
            } else {
                if (typeof d == "string") {
                    c += ' src="' + d + '"'
                }
            }
        }
        c += " />";
        jQuery(c).appendTo(document.body);
        return jQuery("#" + a).get(0)
    }, createUploadForm: function (g, b, a) {
        var e = "jUploadForm" + g;
        var c = "jUploadFile" + g;
        var d = jQuery('<form  action="" method="POST" name="' + e + '" id="' + e + '" enctype="multipart/form-data"></form>');
        var j = jQuery("#" + b);
        var h = jQuery(j).clone();
        jQuery(j).attr("id", c);
        jQuery(j).before(h);
        jQuery(j).appendTo(d);
        if (a) {
            for (var f in a) {
                $('<input type="hidden" name="' + f + '" value="' + a[f] + '" />').appendTo(d)
            }
        }
        jQuery(d).css("position", "absolute");
        jQuery(d).css("top", "-1200px");
        jQuery(d).css("left", "-1200px");
        jQuery(d).appendTo("body");
        return d
    }, ajaxFileUpload: function (i) {
        i = jQuery.extend({}, jQuery.ajaxSettings, i);
        var f = new Date().getTime();
        var b = jQuery.createUploadForm(f, i.fileElementId, i.data);
        var g = jQuery.createUploadIframe(f, i.secureuri);
        var d = "jUploadFrame" + f;
        var c = "jUploadForm" + f;
        if (i.global && !jQuery.active++) {
            jQuery.event.trigger("ajaxStart")
        }
        var h = false;
        var k = {};
        if (i.global) {
            jQuery.event.trigger("ajaxSend", [k, i])
        }
        var j = function (o) {
            var n = document.getElementById(d);
            try {
                if (n.contentWindow) {
                    k.responseText = n.contentWindow.document.body ? n.contentWindow.document.body.innerHTML : null;
                    k.responseXML = n.contentWindow.document.XMLDocument ? n.contentWindow.document.XMLDocument : n.contentWindow.document
                } else {
                    if (n.contentDocument) {
                        k.responseText = n.contentDocument.document.body ? n.contentDocument.document.body.innerHTML : null;
                        k.responseXML = n.contentDocument.document.XMLDocument ? n.contentDocument.document.XMLDocument : n.contentDocument.document
                    }
                }
            } catch (m) {
                jQuery.handleError(i, k, null, m)
            }
            if (k || o == "timeout") {
                h = true;
                var p;
                try {
                    p = o != "timeout" ? "success" : "error";
                    if (p != "error") {
                        var l = jQuery.uploadHttpData(k, i.dataType);
                        if (i.success) {
                            i.success(l, p)
                        }
                        if (i.global) {
                            jQuery.event.trigger("ajaxSuccess", [k, i])
                        }
                    } else {
                        jQuery.handleError(i, k, p)
                    }
                } catch (m) {
                    p = "error";
                    jQuery.handleError(i, k, p, m)
                }
                if (i.global) {
                    jQuery.event.trigger("ajaxComplete", [k, i])
                }
                if (i.global && !--jQuery.active) {
                    jQuery.event.trigger("ajaxStop")
                }
                if (i.complete) {
                    i.complete(k, p)
                }
                jQuery(n).unbind();
                setTimeout(function () {
                    try {
                        jQuery(n).remove();
                        jQuery(b).remove()
                    } catch (q) {
                        jQuery.handleError(i, k, null, q)
                    }
                }, 100);
                k = null
            }
        };
        if (i.timeout > 0) {
            setTimeout(function () {
                if (!h) {
                    j("timeout")
                }
            }, i.timeout)
        }
        try {
            var b = jQuery("#" + c);
            jQuery(b).attr("action", i.url);
            jQuery(b).attr("method", "POST");
            jQuery(b).attr("target", d);
            if (b.encoding) {
                jQuery(b).attr("encoding", "multipart/form-data")
            } else {
                jQuery(b).attr("enctype", "multipart/form-data")
            }
            jQuery(b).submit()
        } catch (a) {
            jQuery.handleError(i, k, null, a)
        }
        jQuery("#" + d).load(j);
        return {
            abort: function () {
            }
        }
    }, handleError: function (b, d, c, a) {
        if (b.error) {
            b.error.call(b.context || b, d, c, a)
        }
        if (b.global) {
            (b.context ? jQuery(b.context) : jQuery.event).trigger("ajaxError", [d, b, a])
        }
    }, uploadHttpData: function (r, type) {
        var data = !type;
        data = type == "xml" || data ? r.responseXML : r.responseText;
        if (type == "script") {
            jQuery.globalEval(data)
        }
        if (type == "json") {
            eval('data = " ' + data + ' " ')
        }
        if (type == "html") {
            jQuery("<div>").html(data).evalScripts()
        }
        return data
    }
})(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        a(jQuery)
    }
}(function (a) {
    var f = /\+/g;

    function d(i) {
        return b.raw ? i : encodeURIComponent(i)
    }

    function c(i) {
        return b.raw ? i : decodeURIComponent(i)
    }

    function h(i) {
        return d(b.json ? JSON.stringify(i) : String(i))
    }

    function e(j) {
        if (j.indexOf('"') === 0) {
            j = j.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            j = decodeURIComponent(j.replace(f, " "));
            return b.json ? JSON.parse(j) : j
        } catch (i) {
        }
    }

    function g(j, i) {
        var k = b.raw ? j : e(j);
        return a.isFunction(i) ? i(k) : k
    }

    var b = a.cookie = function (o, w, r) {
        if (w !== undefined && !a.isFunction(w)) {
            r = a.extend({}, b.defaults, r);
            if (typeof r.expires === "number") {
                var m = r.expires, v = r.expires = new Date();
                v.setDate(v.getDate() + m)
            }
            return (document.cookie = [d(o), "=", h(w), r.expires ? "; expires=" + r.expires.toUTCString() : "", r.path ? "; path=" + r.path : "", r.domain ? "; domain=" + r.domain : "", r.secure ? "; secure" : ""].join(""))
        }
        var u = o ? undefined : {};
        var k = document.cookie ? document.cookie.split("; ") : [];
        for (var n = 0, p = k.length; n < p; n++) {
            var s = k[n].split("=");
            var q = c(s.shift());
            var j = s.join("=");
            if (o && o === q) {
                u = g(j, w);
                break
            }
            if (!o && (j = g(j)) !== undefined) {
                u[q] = j
            }
        }
        return u
    };
    b.defaults = {};
    a.removeCookie = function (i, j) {
        if (a.cookie(i) === undefined) {
            return false
        }
        a.cookie(i, "", a.extend({}, j, {expires: -1}));
        return !a.cookie(i)
    }
}));
function GetUrlValueByParas(g, d) {
    var e = g.substring(g.indexOf("?") + 1, g.length).split("&");
    var c = {};
    var a, b;
    for (a = 0; b = e[a]; a++) {
        c[b.substring(0, b.indexOf("=")).toLowerCase()] = b.substring(b.indexOf("=") + 1, b.length)
    }
    var f = c[d.toLowerCase()];
    if (typeof(f) == "undefined") {
        return ""
    } else {
        return f
    }
}
function GetBrowserHeightAndWidth() {
    var a = (document.compatMode && document.compatMode.toLowerCase() == "css1compat") ? document.documentElement : document.body;
    var c = 0;
    var b = 0;
    var e = 0;
    var d = 0;
    var f = [0, 0];
    f[0] = a.clientHeight;
    f[1] = a.clientWidth;
    c = a.offsetWidth;
    b = a.offsetHeight;
    e = a.scrollWidth;
    d = a.scrollHeight;
    if (b > f[0]) {
        f[0] = b
    }
    if (c > f[1]) {
        f[1] = c
    }
    if (d > f[0]) {
        f[0] = d
    }
    if (e > f[1]) {
        f[1] = e
    }
    return f
};